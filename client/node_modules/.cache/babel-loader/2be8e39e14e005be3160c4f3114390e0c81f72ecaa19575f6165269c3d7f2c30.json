{"ast":null,"code":"'use strict';\n\nvar http = require('http');\nvar https = require('https');\nvar urllib = require('url');\nvar utillib = require('util');\nvar zlib = require('zlib');\nvar dns = require('dns');\nvar Stream = require('stream').Readable;\nvar CookieJar = require('./cookiejar').CookieJar;\nvar encodinglib = require('encoding');\nvar net = require('net');\nvar USE_ALLOC = typeof Buffer.alloc === 'function';\nexports.FetchStream = FetchStream;\nexports.CookieJar = CookieJar;\nexports.fetchUrl = fetchUrl;\nfunction FetchStream(url, options) {\n  Stream.call(this);\n  options = options || {};\n  this.url = url;\n  if (!this.url) {\n    return this.emit('error', new Error('url not defined'));\n  }\n  this.userAgent = options.userAgent || 'FetchStream';\n  this._redirect_count = 0;\n  this.options = options || {};\n  this.normalizeOptions();\n\n  // prevent errors before 'error' handler is set by defferring actions\n  if (typeof setImmediate !== 'undefined') {\n    setImmediate(this.runStream.bind(this, url));\n  } else {\n    process.nextTick(this.runStream.bind(this, url));\n  }\n  this.responseBuffer = USE_ALLOC ? Buffer.alloc(0, '', 'binary') : new Buffer(0, 'binary');\n  this.ended = false;\n  this.readyToRead = 0;\n}\nutillib.inherits(FetchStream, Stream);\nFetchStream.prototype._read = function (size) {\n  if (this.ended && this.responseBuffer.length === 0) {\n    this.push(null);\n    return;\n  }\n  this.readyToRead += size;\n  this.drainBuffer();\n};\nFetchStream.prototype.drainBuffer = function () {\n  if (this.readyToRead === 0) {\n    return;\n  }\n  if (this.responseBuffer.length === 0) {\n    return;\n  }\n  var push;\n  var rest;\n  var restSize;\n  if (this.responseBuffer.length > this.readyToRead) {\n    push = USE_ALLOC ? Buffer.alloc(this.readyToRead, '', 'binary') : new Buffer(this.readyToRead, 'binary');\n    this.responseBuffer.copy(push, 0, 0, this.readyToRead);\n    restSize = this.responseBuffer.length - this.readyToRead;\n    rest = USE_ALLOC ? Buffer.alloc(restSize, '', 'binary') : new Buffer(restSize, 'binary');\n    this.responseBuffer.copy(rest, 0, this.readyToRead);\n  } else {\n    push = this.responseBuffer;\n    rest = USE_ALLOC ? Buffer.alloc(0, '', 'binary') : new Buffer(0, 'binary');\n  }\n  this.responseBuffer = rest;\n  this.readyToRead = 0;\n  if (this.options.encoding) {\n    this.push(push, this.options.encoding);\n  } else {\n    this.push(push);\n  }\n};\nFetchStream.prototype.destroy = function (ex) {\n  this.emit('destroy', ex);\n};\nFetchStream.prototype.normalizeOptions = function () {\n  // cookiejar\n  this.cookieJar = this.options.cookieJar || new CookieJar();\n\n  // default redirects - 10\n  // if disableRedirect is set, then 0\n  if (!this.options.disableRedirect && typeof this.options.maxRedirects !== 'number' && !(this.options.maxRedirects instanceof Number)) {\n    this.options.maxRedirects = 10;\n  } else if (this.options.disableRedirects) {\n    this.options.maxRedirects = 0;\n  }\n\n  // normalize header keys\n  // HTTP and HTTPS takes in key names in case insensitive but to find\n  // an exact value from an object key name needs to be case sensitive\n  // so we're just lowercasing all input keys\n  this.options.headers = this.options.headers || {};\n  var keys = Object.keys(this.options.headers);\n  var newheaders = {};\n  var i;\n  for (i = keys.length - 1; i >= 0; i--) {\n    newheaders[keys[i].toLowerCase().trim()] = this.options.headers[keys[i]];\n  }\n  this.options.headers = newheaders;\n  if (!this.options.headers['user-agent']) {\n    this.options.headers['user-agent'] = this.userAgent;\n  }\n  if (!this.options.headers.pragma) {\n    this.options.headers.pragma = 'no-cache';\n  }\n  if (!this.options.headers['cache-control']) {\n    this.options.headers['cache-control'] = 'no-cache';\n  }\n  if (!this.options.disableGzip) {\n    this.options.headers['accept-encoding'] = 'gzip, deflate';\n  } else {\n    delete this.options.headers['accept-encoding'];\n  }\n\n  // max length for the response,\n  // if not set, default is Infinity\n  if (!this.options.maxResponseLength) {\n    this.options.maxResponseLength = Infinity;\n  }\n\n  // method:\n  // defaults to GET, or when payload present to POST\n  if (!this.options.method) {\n    this.options.method = this.options.payload || this.options.payloadSize ? 'POST' : 'GET';\n  }\n\n  // set cookies\n  // takes full cookie definition strings as params\n  if (this.options.cookies) {\n    for (i = 0; i < this.options.cookies.length; i++) {\n      this.cookieJar.setCookie(this.options.cookies[i], this.url);\n    }\n  }\n\n  // rejectUnauthorized\n  if (typeof this.options.rejectUnauthorized === 'undefined') {\n    this.options.rejectUnauthorized = true;\n  }\n};\nFetchStream.prototype.parseUrl = function (url) {\n  var urlparts = urllib.parse(url, false, true),\n    transport,\n    urloptions = {\n      host: urlparts.hostname || urlparts.host,\n      port: urlparts.port,\n      path: urlparts.pathname + (urlparts.search || '') || '/',\n      method: this.options.method,\n      rejectUnauthorized: this.options.rejectUnauthorized\n    };\n  switch (urlparts.protocol) {\n    case 'https:':\n      transport = https;\n      break;\n    case 'http:':\n    default:\n      transport = http;\n      break;\n  }\n  if (transport === https) {\n    if ('agentHttps' in this.options) {\n      urloptions.agent = this.options.agentHttps;\n    }\n    if ('agent' in this.options) {\n      urloptions.agent = this.options.agent;\n    }\n  } else {\n    if ('agentHttp' in this.options) {\n      urloptions.agent = this.options.agentHttp;\n    }\n    if ('agent' in this.options) {\n      urloptions.agent = this.options.agent;\n    }\n  }\n  if (!urloptions.port) {\n    switch (urlparts.protocol) {\n      case 'https:':\n        urloptions.port = 443;\n        break;\n      case 'http:':\n      default:\n        urloptions.port = 80;\n        break;\n    }\n  }\n  urloptions.headers = this.options.headers || {};\n  if (urlparts.auth) {\n    var buf = USE_ALLOC ? Buffer.alloc(Buffer.byteLength(urlparts.auth), urlparts.auth) : new Buffer(urlparts.auth);\n    urloptions.headers.Authorization = 'Basic ' + buf.toString('base64');\n  }\n  return {\n    urloptions: urloptions,\n    transport: transport\n  };\n};\nFetchStream.prototype.setEncoding = function (encoding) {\n  this.options.encoding = encoding;\n};\nFetchStream.prototype.runStream = function (url) {\n  var url_data = this.parseUrl(url),\n    cookies = this.cookieJar.getCookies(url);\n  if (cookies) {\n    url_data.urloptions.headers.cookie = cookies;\n  } else {\n    delete url_data.urloptions.headers.cookie;\n  }\n  if (this.options.payload) {\n    url_data.urloptions.headers['content-length'] = Buffer.byteLength(this.options.payload || '', 'utf-8');\n  }\n  if (this.options.payloadSize) {\n    url_data.urloptions.headers['content-length'] = this.options.payloadSize;\n  }\n  if (this.options.asyncDnsLoookup) {\n    var dnsCallback = function (err, addresses) {\n      if (err) {\n        this.emit('error', err);\n        return;\n      }\n      url_data.urloptions.headers.host = url_data.urloptions.hostname || url_data.urloptions.host;\n      url_data.urloptions.hostname = addresses[0];\n      url_data.urloptions.host = url_data.urloptions.headers.host + (url_data.urloptions.port ? ':' + url_data.urloptions.port : '');\n      this._runStream(url_data, url);\n    }.bind(this);\n    if (net.isIP(url_data.urloptions.host)) {\n      dnsCallback(null, [url_data.urloptions.host]);\n    } else {\n      dns.resolve4(url_data.urloptions.host, dnsCallback);\n    }\n  } else {\n    this._runStream(url_data, url);\n  }\n};\nFetchStream.prototype._runStream = function (url_data, url) {\n  var req = url_data.transport.request(url_data.urloptions, function (res) {\n    // catch new cookies before potential redirect\n    if (Array.isArray(res.headers['set-cookie'])) {\n      for (var i = 0; i < res.headers['set-cookie'].length; i++) {\n        this.cookieJar.setCookie(res.headers['set-cookie'][i], url);\n      }\n    }\n    if ([301, 302, 303, 307, 308].indexOf(res.statusCode) >= 0) {\n      if (!this.options.disableRedirects && this.options.maxRedirects > this._redirect_count && res.headers.location) {\n        this._redirect_count++;\n        req.destroy();\n        this.runStream(urllib.resolve(url, res.headers.location));\n        return;\n      }\n    }\n    this.meta = {\n      status: res.statusCode,\n      responseHeaders: res.headers,\n      finalUrl: url,\n      redirectCount: this._redirect_count,\n      cookieJar: this.cookieJar\n    };\n    var curlen = 0,\n      maxlen,\n      receive = function (chunk) {\n        if (curlen + chunk.length > this.options.maxResponseLength) {\n          maxlen = this.options.maxResponseLength - curlen;\n        } else {\n          maxlen = chunk.length;\n        }\n        if (maxlen <= 0) {\n          return;\n        }\n        curlen += Math.min(maxlen, chunk.length);\n        if (maxlen >= chunk.length) {\n          if (this.responseBuffer.length === 0) {\n            this.responseBuffer = chunk;\n          } else {\n            this.responseBuffer = Buffer.concat([this.responseBuffer, chunk]);\n          }\n        } else {\n          this.responseBuffer = Buffer.concat([this.responseBuffer, chunk], this.responseBuffer.length + maxlen);\n        }\n        this.drainBuffer();\n      }.bind(this),\n      error = function (e) {\n        this.ended = true;\n        this.emit('error', e);\n        this.drainBuffer();\n      }.bind(this),\n      end = function () {\n        this.ended = true;\n        if (this.responseBuffer.length === 0) {\n          this.push(null);\n        }\n      }.bind(this),\n      unpack = function (type, res) {\n        var z = zlib['create' + type]();\n        z.on('data', receive);\n        z.on('error', error);\n        z.on('end', end);\n        res.pipe(z);\n      }.bind(this);\n    this.emit('meta', this.meta);\n    if (res.headers['content-encoding']) {\n      switch (res.headers['content-encoding'].toLowerCase().trim()) {\n        case 'gzip':\n          return unpack('Gunzip', res);\n        case 'deflate':\n          return unpack('InflateRaw', res);\n      }\n    }\n    res.on('data', receive);\n    res.on('end', end);\n  }.bind(this));\n  req.on('error', function (e) {\n    this.emit('error', e);\n  }.bind(this));\n  if (this.options.timeout) {\n    req.setTimeout(this.options.timeout, req.abort.bind(req));\n  }\n  this.on('destroy', req.abort.bind(req));\n  if (this.options.payload) {\n    req.end(this.options.payload);\n  } else if (this.options.payloadStream) {\n    this.options.payloadStream.pipe(req);\n    this.options.payloadStream.resume();\n  } else {\n    req.end();\n  }\n};\nfunction fetchUrl(url, options, callback) {\n  if (!callback && typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n  options = options || {};\n  var fetchstream = new FetchStream(url, options),\n    response_data,\n    chunks = [],\n    length = 0,\n    curpos = 0,\n    buffer,\n    content_type,\n    callbackFired = false;\n  fetchstream.on('meta', function (meta) {\n    response_data = meta;\n    content_type = _parseContentType(meta.responseHeaders['content-type']);\n  });\n  fetchstream.on('data', function (chunk) {\n    if (chunk) {\n      chunks.push(chunk);\n      length += chunk.length;\n    }\n  });\n  fetchstream.on('error', function (error) {\n    if (error && error.code === 'HPE_INVALID_CONSTANT') {\n      // skip invalid formatting errors\n      return;\n    }\n    if (callbackFired) {\n      return;\n    }\n    callbackFired = true;\n    callback(error);\n  });\n  fetchstream.on('end', function () {\n    if (callbackFired) {\n      return;\n    }\n    callbackFired = true;\n    buffer = USE_ALLOC ? Buffer.alloc(length) : new Buffer(length);\n    for (var i = 0, len = chunks.length; i < len; i++) {\n      chunks[i].copy(buffer, curpos);\n      curpos += chunks[i].length;\n    }\n    if (content_type.mimeType === 'text/html') {\n      content_type.charset = _findHTMLCharset(buffer) || content_type.charset;\n    }\n    content_type.charset = (options.overrideCharset || content_type.charset || 'utf-8').trim().toLowerCase();\n    if (!options.disableDecoding && !content_type.charset.match(/^utf-?8$/i)) {\n      buffer = encodinglib.convert(buffer, 'UTF-8', content_type.charset);\n    }\n    if (options.outputEncoding) {\n      return callback(null, response_data, buffer.toString(options.outputEncoding));\n    } else {\n      return callback(null, response_data, buffer);\n    }\n  });\n}\nfunction _parseContentType(str) {\n  if (!str) {\n    return {};\n  }\n  var parts = str.split(';'),\n    mimeType = parts.shift(),\n    charset,\n    chparts;\n  for (var i = 0, len = parts.length; i < len; i++) {\n    chparts = parts[i].split('=');\n    if (chparts.length > 1) {\n      if (chparts[0].trim().toLowerCase() === 'charset') {\n        charset = chparts[1];\n      }\n    }\n  }\n  return {\n    mimeType: (mimeType || '').trim().toLowerCase(),\n    charset: (charset || 'UTF-8').trim().toLowerCase() // defaults to UTF-8\n  };\n}\n\nfunction _findHTMLCharset(htmlbuffer) {\n  var body = htmlbuffer.toString('ascii'),\n    input,\n    meta,\n    charset;\n  if (meta = body.match(/<meta\\s+http-equiv=[\"']content-type[\"'][^>]*?>/i)) {\n    input = meta[0];\n  }\n  if (input) {\n    charset = input.match(/charset\\s?=\\s?([a-zA-Z\\-0-9]*);?/);\n    if (charset) {\n      charset = (charset[1] || '').trim().toLowerCase();\n    }\n  }\n  if (!charset && (meta = body.match(/<meta\\s+charset=[\"'](.*?)[\"']/i))) {\n    charset = (meta[1] || '').trim().toLowerCase();\n  }\n  return charset;\n}","map":{"version":3,"names":["http","require","https","urllib","utillib","zlib","dns","Stream","Readable","CookieJar","encodinglib","net","USE_ALLOC","Buffer","alloc","exports","FetchStream","fetchUrl","url","options","call","emit","Error","userAgent","_redirect_count","normalizeOptions","setImmediate","runStream","bind","process","nextTick","responseBuffer","ended","readyToRead","inherits","prototype","_read","size","length","push","drainBuffer","rest","restSize","copy","encoding","destroy","ex","cookieJar","disableRedirect","maxRedirects","Number","disableRedirects","headers","keys","Object","newheaders","i","toLowerCase","trim","pragma","disableGzip","maxResponseLength","Infinity","method","payload","payloadSize","cookies","setCookie","rejectUnauthorized","parseUrl","urlparts","parse","transport","urloptions","host","hostname","port","path","pathname","search","protocol","agent","agentHttps","agentHttp","auth","buf","byteLength","Authorization","toString","setEncoding","url_data","getCookies","cookie","asyncDnsLoookup","dnsCallback","err","addresses","_runStream","isIP","resolve4","req","request","res","Array","isArray","indexOf","statusCode","location","resolve","meta","status","responseHeaders","finalUrl","redirectCount","curlen","maxlen","receive","chunk","Math","min","concat","error","e","end","unpack","type","z","on","pipe","timeout","setTimeout","abort","payloadStream","resume","callback","undefined","fetchstream","response_data","chunks","curpos","buffer","content_type","callbackFired","_parseContentType","code","len","mimeType","charset","_findHTMLCharset","overrideCharset","disableDecoding","match","convert","outputEncoding","str","parts","split","shift","chparts","htmlbuffer","body","input"],"sources":["C:/Users/Lucia/Desktop/rick_and_morty/node_modules/fetch/lib/fetch.js"],"sourcesContent":["'use strict';\n\nvar http = require('http');\nvar https = require('https');\nvar urllib = require('url');\nvar utillib = require('util');\nvar zlib = require('zlib');\nvar dns = require('dns');\nvar Stream = require('stream').Readable;\nvar CookieJar = require('./cookiejar').CookieJar;\nvar encodinglib = require('encoding');\nvar net = require('net');\n\nvar USE_ALLOC = typeof Buffer.alloc === 'function';\n\nexports.FetchStream = FetchStream;\nexports.CookieJar = CookieJar;\nexports.fetchUrl = fetchUrl;\n\nfunction FetchStream(url, options) {\n    Stream.call(this);\n\n    options = options || {};\n\n    this.url = url;\n    if (!this.url) {\n        return this.emit('error', new Error('url not defined'));\n    }\n\n    this.userAgent = options.userAgent || 'FetchStream';\n\n    this._redirect_count = 0;\n\n    this.options = options || {};\n    this.normalizeOptions();\n\n    // prevent errors before 'error' handler is set by defferring actions\n    if (typeof setImmediate !== 'undefined') {\n        setImmediate(this.runStream.bind(this, url));\n    } else {\n        process.nextTick(this.runStream.bind(this, url));\n    }\n    this.responseBuffer = USE_ALLOC ? Buffer.alloc(0, '', 'binary') : new Buffer(0, 'binary');\n    this.ended = false;\n    this.readyToRead = 0;\n}\nutillib.inherits(FetchStream, Stream);\n\nFetchStream.prototype._read = function (size) {\n    if (this.ended && this.responseBuffer.length === 0) {\n        this.push(null);\n        return;\n    }\n    this.readyToRead += size;\n    this.drainBuffer();\n};\n\nFetchStream.prototype.drainBuffer = function () {\n    if (this.readyToRead === 0) {\n        return;\n    }\n    if (this.responseBuffer.length === 0) {\n        return;\n    }\n    var push;\n    var rest;\n    var restSize;\n\n    if (this.responseBuffer.length > this.readyToRead) {\n        push = USE_ALLOC ? Buffer.alloc(this.readyToRead, '', 'binary') : new Buffer(this.readyToRead, 'binary');\n        this.responseBuffer.copy(push, 0, 0, this.readyToRead);\n        restSize = this.responseBuffer.length - this.readyToRead;\n        rest = USE_ALLOC ? Buffer.alloc(restSize, '', 'binary') : new Buffer(restSize, 'binary');\n        this.responseBuffer.copy(rest, 0, this.readyToRead);\n    } else {\n        push = this.responseBuffer;\n        rest = USE_ALLOC ? Buffer.alloc(0, '', 'binary') : new Buffer(0, 'binary');\n    }\n    this.responseBuffer = rest;\n    this.readyToRead = 0;\n    if (this.options.encoding) {\n        this.push(push, this.options.encoding);\n    } else {\n        this.push(push);\n    }\n};\n\nFetchStream.prototype.destroy = function (ex) {\n    this.emit('destroy', ex);\n};\n\nFetchStream.prototype.normalizeOptions = function () {\n\n    // cookiejar\n    this.cookieJar = this.options.cookieJar || new CookieJar();\n\n    // default redirects - 10\n    // if disableRedirect is set, then 0\n    if (!this.options.disableRedirect && typeof this.options.maxRedirects !== 'number' &&\n        !(this.options.maxRedirects instanceof Number)) {\n        this.options.maxRedirects = 10;\n    } else if (this.options.disableRedirects) {\n        this.options.maxRedirects = 0;\n    }\n\n    // normalize header keys\n    // HTTP and HTTPS takes in key names in case insensitive but to find\n    // an exact value from an object key name needs to be case sensitive\n    // so we're just lowercasing all input keys\n    this.options.headers = this.options.headers || {};\n\n    var keys = Object.keys(this.options.headers);\n    var newheaders = {};\n    var i;\n\n    for (i = keys.length - 1; i >= 0; i--) {\n        newheaders[keys[i].toLowerCase().trim()] = this.options.headers[keys[i]];\n    }\n\n    this.options.headers = newheaders;\n\n    if (!this.options.headers['user-agent']) {\n        this.options.headers['user-agent'] = this.userAgent;\n    }\n\n    if (!this.options.headers.pragma) {\n        this.options.headers.pragma = 'no-cache';\n    }\n\n    if (!this.options.headers['cache-control']) {\n        this.options.headers['cache-control'] = 'no-cache';\n    }\n\n    if (!this.options.disableGzip) {\n        this.options.headers['accept-encoding'] = 'gzip, deflate';\n    } else {\n        delete this.options.headers['accept-encoding'];\n    }\n\n    // max length for the response,\n    // if not set, default is Infinity\n    if (!this.options.maxResponseLength) {\n        this.options.maxResponseLength = Infinity;\n    }\n\n    // method:\n    // defaults to GET, or when payload present to POST\n    if (!this.options.method) {\n        this.options.method = this.options.payload || this.options.payloadSize ? 'POST' : 'GET';\n    }\n\n    // set cookies\n    // takes full cookie definition strings as params\n    if (this.options.cookies) {\n        for (i = 0; i < this.options.cookies.length; i++) {\n            this.cookieJar.setCookie(this.options.cookies[i], this.url);\n        }\n    }\n\n    // rejectUnauthorized\n    if (typeof this.options.rejectUnauthorized === 'undefined') {\n        this.options.rejectUnauthorized = true;\n    }\n};\n\nFetchStream.prototype.parseUrl = function (url) {\n    var urlparts = urllib.parse(url, false, true),\n        transport,\n        urloptions = {\n            host: urlparts.hostname || urlparts.host,\n            port: urlparts.port,\n            path: urlparts.pathname + (urlparts.search || '') || '/',\n            method: this.options.method,\n            rejectUnauthorized: this.options.rejectUnauthorized\n        };\n\n    switch (urlparts.protocol) {\n        case 'https:':\n            transport = https;\n            break;\n        case 'http:':\n        default:\n            transport = http;\n            break;\n    }\n\n    if (transport === https) {\n        if('agentHttps' in this.options){\n            urloptions.agent = this.options.agentHttps;\n        }\n        if('agent' in this.options){\n            urloptions.agent = this.options.agent;\n        }\n    } else {\n        if('agentHttp' in this.options){\n            urloptions.agent = this.options.agentHttp;\n        }\n        if('agent' in this.options){\n            urloptions.agent = this.options.agent;\n        }\n    }\n\n    if (!urloptions.port) {\n        switch (urlparts.protocol) {\n            case 'https:':\n                urloptions.port = 443;\n                break;\n            case 'http:':\n            default:\n                urloptions.port = 80;\n                break;\n        }\n    }\n\n    urloptions.headers = this.options.headers || {};\n\n    if (urlparts.auth) {\n        var buf = USE_ALLOC ? Buffer.alloc(Buffer.byteLength(urlparts.auth), urlparts.auth) : new Buffer(urlparts.auth);\n        urloptions.headers.Authorization = 'Basic ' + buf.toString('base64');\n    }\n\n    return {\n        urloptions: urloptions,\n        transport: transport\n    };\n};\n\nFetchStream.prototype.setEncoding = function (encoding) {\n    this.options.encoding = encoding;\n};\n\nFetchStream.prototype.runStream = function (url) {\n    var url_data = this.parseUrl(url),\n        cookies = this.cookieJar.getCookies(url);\n\n    if (cookies) {\n        url_data.urloptions.headers.cookie = cookies;\n    } else {\n        delete url_data.urloptions.headers.cookie;\n    }\n\n    if (this.options.payload) {\n        url_data.urloptions.headers['content-length'] = Buffer.byteLength(this.options.payload || '', 'utf-8');\n    }\n\n    if (this.options.payloadSize) {\n        url_data.urloptions.headers['content-length'] = this.options.payloadSize;\n    }\n\n    if (this.options.asyncDnsLoookup) {\n        var dnsCallback = (function (err, addresses) {\n            if (err) {\n                this.emit('error', err);\n                return;\n            }\n\n            url_data.urloptions.headers.host = url_data.urloptions.hostname || url_data.urloptions.host;\n            url_data.urloptions.hostname = addresses[0];\n            url_data.urloptions.host = url_data.urloptions.headers.host + (url_data.urloptions.port ? ':' + url_data.urloptions.port : '');\n\n            this._runStream(url_data, url);\n        }).bind(this);\n\n        if (net.isIP(url_data.urloptions.host)) {\n            dnsCallback(null, [url_data.urloptions.host]);\n        } else {\n            dns.resolve4(url_data.urloptions.host, dnsCallback);\n        }\n    } else {\n        this._runStream(url_data, url);\n    }\n};\n\nFetchStream.prototype._runStream = function (url_data, url) {\n\n    var req = url_data.transport.request(url_data.urloptions, (function (res) {\n\n        // catch new cookies before potential redirect\n        if (Array.isArray(res.headers['set-cookie'])) {\n            for (var i = 0; i < res.headers['set-cookie'].length; i++) {\n                this.cookieJar.setCookie(res.headers['set-cookie'][i], url);\n            }\n        }\n\n        if ([301, 302, 303, 307, 308].indexOf(res.statusCode) >= 0) {\n            if (!this.options.disableRedirects && this.options.maxRedirects > this._redirect_count && res.headers.location) {\n                this._redirect_count++;\n                req.destroy();\n                this.runStream(urllib.resolve(url, res.headers.location));\n                return;\n            }\n        }\n\n        this.meta = {\n            status: res.statusCode,\n            responseHeaders: res.headers,\n            finalUrl: url,\n            redirectCount: this._redirect_count,\n            cookieJar: this.cookieJar\n        };\n\n        var curlen = 0,\n            maxlen,\n\n            receive = (function (chunk) {\n                if (curlen + chunk.length > this.options.maxResponseLength) {\n                    maxlen = this.options.maxResponseLength - curlen;\n                } else {\n                    maxlen = chunk.length;\n                }\n\n                if (maxlen <= 0) {\n                    return;\n                }\n\n                curlen += Math.min(maxlen, chunk.length);\n                if (maxlen >= chunk.length) {\n                    if (this.responseBuffer.length === 0) {\n                        this.responseBuffer = chunk;\n                    } else {\n                        this.responseBuffer = Buffer.concat([this.responseBuffer, chunk]);\n                    }\n                } else {\n                    this.responseBuffer = Buffer.concat([this.responseBuffer, chunk], this.responseBuffer.length + maxlen);\n                }\n                this.drainBuffer();\n            }).bind(this),\n\n            error = (function (e) {\n                this.ended = true;\n                this.emit('error', e);\n                this.drainBuffer();\n            }).bind(this),\n\n            end = (function () {\n                this.ended = true;\n                if (this.responseBuffer.length === 0) {\n                    this.push(null);\n                }\n            }).bind(this),\n\n            unpack = (function (type, res) {\n                var z = zlib['create' + type]();\n                z.on('data', receive);\n                z.on('error', error);\n                z.on('end', end);\n                res.pipe(z);\n            }).bind(this);\n\n        this.emit('meta', this.meta);\n\n        if (res.headers['content-encoding']) {\n            switch (res.headers['content-encoding'].toLowerCase().trim()) {\n                case 'gzip':\n                    return unpack('Gunzip', res);\n                case 'deflate':\n                    return unpack('InflateRaw', res);\n            }\n        }\n\n        res.on('data', receive);\n        res.on('end', end);\n\n    }).bind(this));\n\n    req.on('error', (function (e) {\n        this.emit('error', e);\n    }).bind(this));\n\n    if (this.options.timeout) {\n        req.setTimeout(this.options.timeout, req.abort.bind(req));\n    }\n    this.on('destroy', req.abort.bind(req));\n\n    if (this.options.payload) {\n        req.end(this.options.payload);\n    } else if (this.options.payloadStream) {\n        this.options.payloadStream.pipe(req);\n        this.options.payloadStream.resume();\n    } else {\n        req.end();\n    }\n};\n\nfunction fetchUrl(url, options, callback) {\n    if (!callback && typeof options === 'function') {\n        callback = options;\n        options = undefined;\n    }\n    options = options || {};\n\n    var fetchstream = new FetchStream(url, options),\n        response_data, chunks = [],\n        length = 0,\n        curpos = 0,\n        buffer,\n        content_type,\n        callbackFired = false;\n\n    fetchstream.on('meta', function (meta) {\n        response_data = meta;\n        content_type = _parseContentType(meta.responseHeaders['content-type']);\n    });\n\n    fetchstream.on('data', function (chunk) {\n        if (chunk) {\n            chunks.push(chunk);\n            length += chunk.length;\n        }\n    });\n\n    fetchstream.on('error', function (error) {\n        if (error && error.code === 'HPE_INVALID_CONSTANT') {\n            // skip invalid formatting errors\n            return;\n        }\n        if (callbackFired) {\n            return;\n        }\n        callbackFired = true;\n        callback(error);\n    });\n\n    fetchstream.on('end', function () {\n        if (callbackFired) {\n            return;\n        }\n        callbackFired = true;\n\n        buffer = USE_ALLOC ? Buffer.alloc(length) : new Buffer(length);\n        for (var i = 0, len = chunks.length; i < len; i++) {\n            chunks[i].copy(buffer, curpos);\n            curpos += chunks[i].length;\n        }\n\n        if (content_type.mimeType === 'text/html') {\n            content_type.charset = _findHTMLCharset(buffer) || content_type.charset;\n        }\n\n        content_type.charset = (options.overrideCharset || content_type.charset || 'utf-8').trim().toLowerCase();\n\n\n        if (!options.disableDecoding && !content_type.charset.match(/^utf-?8$/i)) {\n            buffer = encodinglib.convert(buffer, 'UTF-8', content_type.charset);\n        }\n\n        if (options.outputEncoding) {\n            return callback(null, response_data, buffer.toString(options.outputEncoding));\n        } else {\n            return callback(null, response_data, buffer);\n        }\n\n    });\n}\n\nfunction _parseContentType(str) {\n    if (!str) {\n        return {};\n    }\n    var parts = str.split(';'),\n        mimeType = parts.shift(),\n        charset, chparts;\n\n    for (var i = 0, len = parts.length; i < len; i++) {\n        chparts = parts[i].split('=');\n        if (chparts.length > 1) {\n            if (chparts[0].trim().toLowerCase() === 'charset') {\n                charset = chparts[1];\n            }\n        }\n    }\n\n    return {\n        mimeType: (mimeType || '').trim().toLowerCase(),\n        charset: (charset || 'UTF-8').trim().toLowerCase() // defaults to UTF-8\n    };\n}\n\nfunction _findHTMLCharset(htmlbuffer) {\n\n    var body = htmlbuffer.toString('ascii'),\n        input, meta, charset;\n\n    if ((meta = body.match(/<meta\\s+http-equiv=[\"']content-type[\"'][^>]*?>/i))) {\n        input = meta[0];\n    }\n\n    if (input) {\n        charset = input.match(/charset\\s?=\\s?([a-zA-Z\\-0-9]*);?/);\n        if (charset) {\n            charset = (charset[1] || '').trim().toLowerCase();\n        }\n    }\n\n    if (!charset && (meta = body.match(/<meta\\s+charset=[\"'](.*?)[\"']/i))) {\n        charset = (meta[1] || '').trim().toLowerCase();\n    }\n\n    return charset;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}