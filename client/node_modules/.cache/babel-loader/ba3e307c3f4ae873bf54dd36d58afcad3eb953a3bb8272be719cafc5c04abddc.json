{"ast":null,"code":"'use strict';\n\nvar urllib = require('url');\nmodule.exports.CookieJar = CookieJar;\nfunction CookieJar(options) {\n  this.options = options || {};\n  this.options.sessionTimeout = this.options.sessionTimeout || 1800; // 30min\n\n  this.cookies = {};\n}\nCookieJar.prototype.addCookie = function (cookie) {\n  if (!cookie || !cookie.name) {\n    return;\n  }\n  var lcookie;\n  if (!this.cookies[cookie.name]) {\n    this.cookies[cookie.name] = [];\n  }\n\n  // overwrite if has same params\n  for (var i = 0, len = this.cookies[cookie.name].length; i < len; i++) {\n    lcookie = this.cookies[cookie.name][i];\n    if (lcookie.path === cookie.path && lcookie.domain === cookie.domain && lcookie.secure === cookie.secure && lcookie.httponly === cookie.httponly) {\n      this.cookies[cookie.name][i] = cookie;\n      return;\n    }\n  }\n  this.cookies[cookie.name].push(cookie);\n};\nCookieJar.prototype.getCookies = function (url) {\n  var keys = Object.keys(this.cookies),\n    cookie,\n    cookies = [];\n  for (var i = 0, len = keys.length; i < len; i++) {\n    if (Array.isArray(this.cookies[keys[i]])) {\n      for (var j = 0, lenj = this.cookies[keys[i]].length; j < lenj; j++) {\n        cookie = this.cookies[keys[i]][j];\n        if (this.matchCookie(cookie, url)) {\n          cookies.push(cookie.name + '=' + cookie.value);\n        }\n      }\n    }\n  }\n  return cookies.join('; ');\n};\nCookieJar.prototype.matchCookie = function (cookie, url) {\n  var urlparts = urllib.parse(url || '', false, true),\n    path;\n\n  // check expire\n  if (cookie.expire) {\n    if (cookie.expire.getTime() < Date.now()) {\n      return;\n    }\n  }\n\n  // check if hostname matches\n  if (urlparts.hostname && cookie._domain) {\n    if (!(urlparts.hostname === cookie._domain || urlparts.hostname.substr(-(cookie._domain.length + 1)) === '.' + cookie._domain)) {\n      return false;\n    }\n  }\n\n  // check if path matches\n  if (cookie.path && urlparts.pathname) {\n    path = (urlparts.pathname || '/').split('/');\n    path.pop();\n    path = path.join('/').trim();\n    if (path.substr(0, 1) !== '/') {\n      path = '/' + path;\n    }\n    if (path.substr(-1) !== '/') {\n      path += '/';\n    }\n    if (path.substr(0, cookie.path.length) !== cookie.path) {\n      return false;\n    }\n  }\n\n  // check secure\n  if (cookie.secure && urlparts.protocol) {\n    if (urlparts.protocol !== 'https:') {\n      return false;\n    }\n  }\n\n  // check httponly\n  if (cookie.httponly && urlparts.protocol) {\n    if (urlparts.protocol !== 'http:') {\n      return false;\n    }\n  }\n  return true;\n};\nCookieJar.prototype.setCookie = function (cookie_str, url) {\n  var parts = (cookie_str || '').split(';'),\n    cookie = {},\n    urlparts = urllib.parse(url || '', false, true),\n    path;\n  parts.forEach(function (part) {\n    var key, val;\n    part = part.split('=');\n    key = part.shift().trim();\n    val = part.join('=').trim();\n    if (!key) {\n      return;\n    }\n    switch (key.toLowerCase()) {\n      case 'expires':\n        cookie.expires = new Date(val);\n        break;\n      case 'path':\n        cookie.path = val.trim();\n        break;\n      case 'domain':\n        cookie.domain = val.toLowerCase();\n        break;\n      case 'max-age':\n        cookie.expires = new Date(Date.now() + (Number(val) || 0) * 1000);\n        break;\n      case 'secure':\n        cookie.secure = true;\n        break;\n      case 'httponly':\n        cookie.httponly = true;\n        break;\n      default:\n        if (!cookie.name) {\n          cookie.name = key;\n          cookie.value = val;\n        }\n    }\n  }.bind(this));\n\n  // use current path when path is not specified\n  if (!cookie.path) {\n    path = (urlparts.pathname || '/').split('/');\n    path.pop();\n    cookie.path = path.join('/').trim();\n    if (cookie.path.substr(0, 1) !== '/') {\n      cookie.path = '/' + cookie.path;\n    }\n    if (cookie.path.substr(-1) !== '/') {\n      cookie.path += '/';\n    }\n  }\n\n  // if no expire date, then use sessionTimeout value\n  if (!cookie.expires) {\n    cookie._expires = new Date(Date.now() + (Number(this.options.sessionTimeout) || 0) * 1000);\n  } else {\n    cookie._expires = cookie.expires;\n  }\n  if (!cookie.domain) {\n    if (urlparts.hostname) {\n      cookie._domain = urlparts.hostname;\n    }\n  } else {\n    cookie._domain = cookie.domain;\n  }\n  this.addCookie(cookie);\n};","map":{"version":3,"names":["urllib","require","module","exports","CookieJar","options","sessionTimeout","cookies","prototype","addCookie","cookie","name","lcookie","i","len","length","path","domain","secure","httponly","push","getCookies","url","keys","Object","Array","isArray","j","lenj","matchCookie","value","join","urlparts","parse","expire","getTime","Date","now","hostname","_domain","substr","pathname","split","pop","trim","protocol","setCookie","cookie_str","parts","forEach","part","key","val","shift","toLowerCase","expires","Number","bind","_expires"],"sources":["C:/Users/Lucia/Desktop/rick_and_morty/node_modules/fetch/lib/cookiejar.js"],"sourcesContent":["'use strict';\n\nvar urllib = require('url');\n\nmodule.exports.CookieJar = CookieJar;\n\nfunction CookieJar(options) {\n    this.options = options || {};\n    this.options.sessionTimeout = this.options.sessionTimeout || 1800; // 30min\n\n    this.cookies = {};\n}\n\nCookieJar.prototype.addCookie = function (cookie) {\n\n    if (!cookie || !cookie.name) {\n        return;\n    }\n\n    var lcookie;\n\n    if (!this.cookies[cookie.name]) {\n        this.cookies[cookie.name] = [];\n    }\n\n    // overwrite if has same params\n    for (var i = 0, len = this.cookies[cookie.name].length; i < len; i++) {\n        lcookie = this.cookies[cookie.name][i];\n        if (\n            lcookie.path === cookie.path &&\n            lcookie.domain === cookie.domain &&\n            lcookie.secure === cookie.secure &&\n            lcookie.httponly === cookie.httponly\n        ) {\n            this.cookies[cookie.name][i] = cookie;\n            return;\n        }\n    }\n\n    this.cookies[cookie.name].push(cookie);\n};\n\nCookieJar.prototype.getCookies = function (url) {\n    var keys = Object.keys(this.cookies),\n        cookie, cookies = [];\n\n    for (var i = 0, len = keys.length; i < len; i++) {\n        if (Array.isArray(this.cookies[keys[i]])) {\n            for (var j = 0, lenj = this.cookies[keys[i]].length; j < lenj; j++) {\n                cookie = this.cookies[keys[i]][j];\n                if (this.matchCookie(cookie, url)) {\n                    cookies.push(cookie.name + '=' + cookie.value);\n                }\n            }\n        }\n    }\n    return cookies.join('; ');\n};\n\nCookieJar.prototype.matchCookie = function (cookie, url) {\n    var urlparts = urllib.parse(url || '', false, true),\n        path;\n\n    // check expire\n    if (cookie.expire) {\n        if (cookie.expire.getTime() < Date.now()) {\n            return;\n        }\n    }\n\n    // check if hostname matches\n    if (urlparts.hostname && cookie._domain) {\n        if (!(urlparts.hostname === cookie._domain || urlparts.hostname.substr(-(cookie._domain.length + 1)) === '.' + cookie._domain)) {\n            return false;\n        }\n    }\n\n    // check if path matches\n    if (cookie.path && urlparts.pathname) {\n\n        path = (urlparts.pathname || '/').split('/');\n        path.pop();\n        path = path.join('/').trim();\n        if (path.substr(0, 1) !== '/') {\n            path = '/' + path;\n        }\n        if (path.substr(-1) !== '/') {\n            path += '/';\n        }\n\n        if (path.substr(0, cookie.path.length) !== cookie.path) {\n            return false;\n        }\n    }\n\n    // check secure\n    if (cookie.secure && urlparts.protocol) {\n        if (urlparts.protocol !== 'https:') {\n            return false;\n        }\n    }\n\n    // check httponly\n    if (cookie.httponly && urlparts.protocol) {\n        if (urlparts.protocol !== 'http:') {\n            return false;\n        }\n    }\n\n    return true;\n};\n\nCookieJar.prototype.setCookie = function (cookie_str, url) {\n    var parts = (cookie_str || '').split(';'),\n        cookie = {},\n        urlparts = urllib.parse(url || '', false, true),\n        path;\n\n    parts.forEach((function (part) {\n        var key, val;\n        part = part.split('=');\n        key = part.shift().trim();\n        val = part.join('=').trim();\n\n        if (!key) {\n            return;\n        }\n\n        switch (key.toLowerCase()) {\n\n            case 'expires':\n\n                cookie.expires = new Date(val);\n                break;\n\n            case 'path':\n                cookie.path = val.trim();\n                break;\n\n            case 'domain':\n                cookie.domain = val.toLowerCase();\n                break;\n\n            case 'max-age':\n                cookie.expires = new Date(Date.now() + (Number(val) || 0) * 1000);\n                break;\n\n            case 'secure':\n                cookie.secure = true;\n                break;\n\n            case 'httponly':\n                cookie.httponly = true;\n                break;\n\n            default:\n                if (!cookie.name) {\n                    cookie.name = key;\n                    cookie.value = val;\n                }\n        }\n    }).bind(this));\n\n    // use current path when path is not specified\n    if (!cookie.path) {\n        path = (urlparts.pathname || '/').split('/');\n        path.pop();\n        cookie.path = path.join('/').trim();\n        if (cookie.path.substr(0, 1) !== '/') {\n            cookie.path = '/' + cookie.path;\n        }\n        if (cookie.path.substr(-1) !== '/') {\n            cookie.path += '/';\n        }\n    }\n\n    // if no expire date, then use sessionTimeout value\n    if (!cookie.expires) {\n        cookie._expires = new Date(Date.now() + (Number(this.options.sessionTimeout) || 0) * 1000);\n    } else {\n        cookie._expires = cookie.expires;\n    }\n\n    if (!cookie.domain) {\n        if (urlparts.hostname) {\n            cookie._domain = urlparts.hostname;\n        }\n    } else {\n        cookie._domain = cookie.domain;\n    }\n\n    this.addCookie(cookie);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}